/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ItemData, ParsedCategoryData } from "~helpers/declarations";
export namespace Components {
    interface StiArrow {
        "direction": boolean;
    }
    interface StiCategory {
        "category": ParsedCategoryData;
        "dark": boolean;
    }
    interface StiItem {
        "dark": boolean;
        "item": ItemData;
        "print": boolean;
    }
    interface StiItemValue {
        "canExpand": boolean;
        "dark": boolean;
        "expanded": boolean;
        "item": ItemData;
        "onExpand": (event: MouseEvent) => void;
    }
    interface StiLogo {
        "dark": boolean;
    }
    interface StiMain {
    }
    interface StiMessage {
        "dark": boolean;
        "message": string;
    }
    interface StiRefresh {
    }
}
declare global {
    interface HTMLStiArrowElement extends Components.StiArrow, HTMLStencilElement {
    }
    var HTMLStiArrowElement: {
        prototype: HTMLStiArrowElement;
        new (): HTMLStiArrowElement;
    };
    interface HTMLStiCategoryElement extends Components.StiCategory, HTMLStencilElement {
    }
    var HTMLStiCategoryElement: {
        prototype: HTMLStiCategoryElement;
        new (): HTMLStiCategoryElement;
    };
    interface HTMLStiItemElement extends Components.StiItem, HTMLStencilElement {
    }
    var HTMLStiItemElement: {
        prototype: HTMLStiItemElement;
        new (): HTMLStiItemElement;
    };
    interface HTMLStiItemValueElement extends Components.StiItemValue, HTMLStencilElement {
    }
    var HTMLStiItemValueElement: {
        prototype: HTMLStiItemValueElement;
        new (): HTMLStiItemValueElement;
    };
    interface HTMLStiLogoElement extends Components.StiLogo, HTMLStencilElement {
    }
    var HTMLStiLogoElement: {
        prototype: HTMLStiLogoElement;
        new (): HTMLStiLogoElement;
    };
    interface HTMLStiMainElement extends Components.StiMain, HTMLStencilElement {
    }
    var HTMLStiMainElement: {
        prototype: HTMLStiMainElement;
        new (): HTMLStiMainElement;
    };
    interface HTMLStiMessageElement extends Components.StiMessage, HTMLStencilElement {
    }
    var HTMLStiMessageElement: {
        prototype: HTMLStiMessageElement;
        new (): HTMLStiMessageElement;
    };
    interface HTMLStiRefreshElement extends Components.StiRefresh, HTMLStencilElement {
    }
    var HTMLStiRefreshElement: {
        prototype: HTMLStiRefreshElement;
        new (): HTMLStiRefreshElement;
    };
    interface HTMLElementTagNameMap {
        "sti-arrow": HTMLStiArrowElement;
        "sti-category": HTMLStiCategoryElement;
        "sti-item": HTMLStiItemElement;
        "sti-item-value": HTMLStiItemValueElement;
        "sti-logo": HTMLStiLogoElement;
        "sti-main": HTMLStiMainElement;
        "sti-message": HTMLStiMessageElement;
        "sti-refresh": HTMLStiRefreshElement;
    }
}
declare namespace LocalJSX {
    interface StiArrow {
        "direction"?: boolean;
    }
    interface StiCategory {
        "category"?: ParsedCategoryData;
        "dark"?: boolean;
    }
    interface StiItem {
        "dark"?: boolean;
        "item"?: ItemData;
        "print"?: boolean;
    }
    interface StiItemValue {
        "canExpand"?: boolean;
        "dark"?: boolean;
        "expanded"?: boolean;
        "item"?: ItemData;
        "onExpand"?: (event: MouseEvent) => void;
    }
    interface StiLogo {
        "dark"?: boolean;
    }
    interface StiMain {
    }
    interface StiMessage {
        "dark"?: boolean;
        "message"?: string;
    }
    interface StiRefresh {
    }
    interface IntrinsicElements {
        "sti-arrow": StiArrow;
        "sti-category": StiCategory;
        "sti-item": StiItem;
        "sti-item-value": StiItemValue;
        "sti-logo": StiLogo;
        "sti-main": StiMain;
        "sti-message": StiMessage;
        "sti-refresh": StiRefresh;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "sti-arrow": LocalJSX.StiArrow & JSXBase.HTMLAttributes<HTMLStiArrowElement>;
            "sti-category": LocalJSX.StiCategory & JSXBase.HTMLAttributes<HTMLStiCategoryElement>;
            "sti-item": LocalJSX.StiItem & JSXBase.HTMLAttributes<HTMLStiItemElement>;
            "sti-item-value": LocalJSX.StiItemValue & JSXBase.HTMLAttributes<HTMLStiItemValueElement>;
            "sti-logo": LocalJSX.StiLogo & JSXBase.HTMLAttributes<HTMLStiLogoElement>;
            "sti-main": LocalJSX.StiMain & JSXBase.HTMLAttributes<HTMLStiMainElement>;
            "sti-message": LocalJSX.StiMessage & JSXBase.HTMLAttributes<HTMLStiMessageElement>;
            "sti-refresh": LocalJSX.StiRefresh & JSXBase.HTMLAttributes<HTMLStiRefreshElement>;
        }
    }
}
